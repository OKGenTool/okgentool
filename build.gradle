import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'application'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.23'
}

group = 'org.example'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    implementation("io.swagger.parser.v3:swagger-parser:2.1.21")
    implementation("com.squareup:kotlinpoet:1.16.0")
    runtimeOnly("org.slf4j:slf4j-simple:2.0.9")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")
    implementation("io.ktor:ktor-http:2.3.11")
    implementation("io.ktor:ktor-server-core:2.3.11")
    implementation("io.ktor:ktor-server-resources:2.3.11")
    implementation("io.ktor:ktor-client-core:2.3.11")
    implementation("io.ktor:ktor-client-cio:2.3.11")
    implementation("io.ktor:ktor-client-content-negotiation:2.3.11")
    implementation("io.ktor:ktor-serialization-kotlinx-json:2.3.11")
    implementation("io.ktor:ktor-serialization-kotlinx-xml:2.3.11")
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(8)
}

application {
    mainClassName = 'MainKt'
}

task copyRuntimeDependencies(type: Copy) {
    into 'build/libs'
    from configurations.runtimeClasspath
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}